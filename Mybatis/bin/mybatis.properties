<mapper namespace=“命名空间  要绑定的接口名称及路径如 dao.UserDao”>

查

	<select id=“查询标签的名称” parameterType="传入的参数类型（可省略）" resultType=“返回数据类型 (增删改可以省略) 如 dao.Admin”>
	   	书写要查询的sql语句 如 select  *from admin where id(此处写数据表中的标准字段) = #{id(此处写传入的参数名或者实体类中的属性名)占位符，传入的参数}
	</select> 查询标签


sql片段

	<sql id="user">
		id,login_name,username   用于查询语句的引入
	</sql>
	<include refid="user"/> 引入方式


删

	<delete id="delate" parameterType="java.lang.Integer" 默认返回值类型为int 不需要设置默认返回值></delete>


增

	<insert id="insert" parameterType="bean.Admin" >
		传入参数中会如果是一个实体类  mybatis会自动调用实体类中的属性的get方法，如果#{}中的名称于实体类中不一致，会导致mybatis查询添加不成功
		传入是一个map集合  mybatis会利用map集合中的key值进行映射
		传入list集合  需要食用foreach循环进行循环数据添加
		<foreach collection=" 传入集合或者数组的名称 如 list" item=" 给循环迭代出来的对象起别名li" separator="间隔符 ,"> 
			#{li}
		</foreach>
	</insert>
	

resultMap

	<resultMap id="别名" type=“映射的类路径”>
		<id  column="id表种列名" javaType="int java中的数据类型" jdbcType="INTEGER 数据库中的数据类型" property="id实体类中的属性名">用于匹配表中的主键的
		<result  column="id表种列名" javaType="int java中的数据类型" jdbcType="INTEGER 数据库中的数据类型" property="id实体类中的属性名">用于匹配除了主键之外的其他列 </>
		<association property="role 主表的实体类中存储的从表的对象的对象名" javaType="bean.Role 从表的类路径"  ></> 一对多。一对一的配置

</mapper>   代表mybatis中表的配置文件